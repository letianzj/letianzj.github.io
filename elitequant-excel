<!DOCTYPE html>



  


<html class="theme-next gemini use-motion" lang="">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta name="theme-color" content="#222">









<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />
















  
  
  <link href="/lib/fancybox/source/jquery.fancybox.css?v=2.1.5" rel="stylesheet" type="text/css" />







<link href="/lib/font-awesome/css/font-awesome.min.css?v=4.6.2" rel="stylesheet" type="text/css" />

<link href="/css/main.css?v=5.1.4" rel="stylesheet" type="text/css" />


  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png?v=5.1.4">


  <link rel="mask-icon" href="/images/logo.svg?v=5.1.4" color="#222">





  <meta name="keywords" content="EliteQuant,Quantitative Finance,Trading Ssytem,Asset Pricing,Derivative Pricing,QuantLib" />










<meta name="description" content="IntroductionEliteQuant Excel is an open source quantitative modeling solution in Excel. Excel is one of the most popular tools in the business world, across both sell side and buy side. EliteQuant Exc">
<meta name="keywords" content="EliteQuant,Quantitative Finance,Trading Ssytem,Asset Pricing,Derivative Pricing,QuantLib">
<meta property="og:type" content="article">
<meta property="og:title" content="EliteQuant Excel">
<meta property="og:url" content="https://letianzj.github.io/elitequant-excel">
<meta property="og:site_name" content="Letian Wang">
<meta property="og:description" content="IntroductionEliteQuant Excel is an open source quantitative modeling solution in Excel. Excel is one of the most popular tools in the business world, across both sell side and buy side. EliteQuant Exc">
<meta property="og:locale" content="default">
<meta property="og:image" content="https://letianzj.github.io/elitequant-excel/tech_stack.png">
<meta property="og:updated_time" content="2018-10-16T00:23:06.602Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="EliteQuant Excel">
<meta name="twitter:description" content="IntroductionEliteQuant Excel is an open source quantitative modeling solution in Excel. Excel is one of the most popular tools in the business world, across both sell side and buy side. EliteQuant Exc">
<meta name="twitter:image" content="https://letianzj.github.io/elitequant-excel/tech_stack.png">



<script type="text/javascript" id="hexo.configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Gemini',
    version: '5.1.4',
    sidebar: {"position":"left","display":"post","offset":12,"b2t":false,"scrollpercent":false,"onmobile":false},
    fancybox: true,
    tabs: true,
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    duoshuo: {
      userId: '0',
      author: 'Author'
    },
    algolia: {
      applicationID: '',
      apiKey: '',
      indexName: '',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    }
  };
</script>



  <link rel="canonical" href="https://letianzj.github.io/elitequant-excel"/>





  <title>EliteQuant Excel | EliteQuant,Quantitative Finance,Trading Ssytem,Asset Pricing,Derivative Pricing,QuantLib | Letian Wang</title>
  




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-109341958-2', 'auto');
  ga('send', 'pageview');
</script>





</head>

<body itemscope itemtype="http://schema.org/WebPage" lang="default">

  
  
    
  

  <div class="container sidebar-position-left page-post-detail">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-wrapper">
  <div class="site-meta ">
    

    <div class="custom-logo-site-title">
      <a href="/"  class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">Letian Wang</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
      
        <h1 class="site-subtitle" itemprop="description">Quant Trading and Portfolio Management</h1>
      
  </div>

  <div class="site-nav-toggle">
    <button>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
    </button>
  </div>
</div>

<nav class="site-nav">
  

  
    <ul id="menu" class="menu">
      
        
        <li class="menu-item menu-item-home">
          <a href="/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-home"></i> <br />
            
            Home
          </a>
        </li>
      
        
        <li class="menu-item menu-item-categories">
          <a href="/categories/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-th"></i> <br />
            
            Categories
          </a>
        </li>
      
        
        <li class="menu-item menu-item-archives">
          <a href="/archives/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-archive"></i> <br />
            
            Archives
          </a>
        </li>
      
        
        <li class="menu-item menu-item-sitemap">
          <a href="/sitemap.xml" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-sitemap"></i> <br />
            
            Sitemap
          </a>
        </li>
      

      
    </ul>
  

  
</nav>



 </div>
    </header>

    <main id="main" class="main">
      <div class="main-inner">
        <div class="content-wrap">
          <div id="content" class="content">
            

  <div id="posts" class="posts-expand">
    

  

  
  
  

  <article class="post post-type-normal" itemscope itemtype="http://schema.org/Article">
  
  
  
  <div class="post-block">
    <link itemprop="mainEntityOfPage" href="https://letianzj.github.io/elitequant-excel">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="name" content="Letian">
      <meta itemprop="description" content="">
      <meta itemprop="image" content="/images/avatar.png">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Letian Wang">
    </span>

    
      <header class="post-header">

        
        
          <h2 class="post-title" itemprop="name headline">EliteQuant Excel</h2>
        

        <div class="post-meta">
          <span class="post-time">
            
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              
                <span class="post-meta-item-text">Posted on</span>
              
              <time title="Post created" itemprop="dateCreated datePublished" datetime="2018-02-11T21:15:00-05:00">
                2018-02-11
              </time>
            

            

            
          </span>

          
            <span class="post-category" >
            
              <span class="post-meta-divider">|</span>
            
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              
                <span class="post-meta-item-text">In</span>
              
              
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/Systematic-Investment/" itemprop="url" rel="index">
                    <span itemprop="name">Systematic Investment</span>
                  </a>
                </span>

                
                
                  , 
                
              
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/Systematic-Investment/Trading-Ssytem/" itemprop="url" rel="index">
                    <span itemprop="name">Trading Ssytem</span>
                  </a>
                </span>

                
                
              
            </span>
          

          
            
              <span class="post-comments-count">
                <span class="post-meta-divider">|</span>
                <span class="post-meta-item-icon">
                  <i class="fa fa-comment-o"></i>
                </span>
                <a href="/elitequant-excel#comments" itemprop="discussionUrl">
                  <span class="post-comments-count disqus-comment-count"
                        data-disqus-identifier="elitequant-excel" itemprop="commentCount"></span>
                </a>
              </span>
            
          

          
          

          

          

          
		  
		  

        </div>
      </header>
    

    
    
    
    <div class="post-body" itemprop="articleBody">

      
      

      
        <h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><a href="https://github.com/EliteQuant/EliteQuant_Excel" target="_blank" rel="noopener">EliteQuant Excel</a> is an open source quantitative modeling solution in Excel. Excel is one of the most popular tools in the business world, across both sell side and buy side. EliteQuant Excel is an Excel Add-in that enables you to create quantitative financial models in Excel spreadsheet, in the same way how financial professionals such as traders, quants, and portfolio managers do their daily to daily work.</p>
<p>You are able to create pricing and simulation tools for products across all asset classes such as interest rate and FX, and from plain vanilla to exotic be-spoken instruments. You are also able to backtest and live trade from Excel, with the so-called RTD, or real-time data support.</p>
<p>This post will discuss the technical stack used by EliteQuant Excel from developer’s perspective.</p>
<a id="more"></a>
<h2 id="Code-Structure"><a href="#Code-Structure" class="headerlink" title="Code Structure"></a>Code Structure</h2><p>Before proceed, I want to point out that QuantLib does provide an Excel add-in called <a href="https://www.quantlib.org/quantlibxl/" target="_blank" rel="noopener">QuantLibXL</a>. But I find C#/ExcelDNA route is simplier and more flexible. The technical stack requirment is shown as follows. In order to understand the structure, you need some previous knowledge about C++, C#, and VBA.</p>
<!--<img src="tech_stack.png" align="center" width="80%" height="80%">-->
<img src="/elitequant-excel/tech_stack.png" title="TechStack">
<p>Below is the simplified code structure of the project.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+-- CppCoreLibrary</span><br><span class="line">|   +-- QLExtension</span><br><span class="line">|   	+-- quantlib.i</span><br><span class="line">+-- SwigConversionLayer</span><br><span class="line">|   +-- swig</span><br><span class="line">|   +-- NQuantlibc</span><br><span class="line">|   +-- QLEX</span><br><span class="line">|   	+-- NQuantLibcPINVOKE.cs</span><br><span class="line">+-- CSharpApplication</span><br><span class="line">|   +-- EliteQuant</span><br><span class="line">|   +-- EliteQuantExcel</span><br></pre></td></tr></table></figure>
<h3 id="C-Analytical-Library"><a href="#C-Analytical-Library" class="headerlink" title="C++ Analytical Library"></a>C++ Analytical Library</h3><p>EliteQuant Excel is based on open-source C++ library <a href="https://www.quantlib.org/" target="_blank" rel="noopener">Quantlib</a>, which in turn depends on <a href="https://www.boost.org/" target="_blank" rel="noopener">Boost C++</a>. Therefore before we start you you need to install both of them. Fortunately, <a href="https://www.quantlib.org/install.shtml" target="_blank" rel="noopener">QuantLib official website</a> provides a detailed intallation guide across operating systems.</p>
<p>Then <strong>CppCoreLibrary</strong> solution layer holds a project called <strong>QLExtension</strong>. In this project you are able to extend QuantLib with your own functions. I chose a non-intrusive approach to QuantLib by putting customized codes in a separate project. This project is a standard C++ static library so it should be compiled successfully by including QuantLib and Boost in its project path.</p>
<h3 id="SWIG-Conversion-Layer"><a href="#SWIG-Conversion-Layer" class="headerlink" title="SWIG Conversion Layer"></a>SWIG Conversion Layer</h3><p>To convert C++ code to C#, you need to install a tool called <a href="http://swig.org/" target="_blank" rel="noopener">SWIG</a>. This is the approach taken by QuantLib, in order to support languages such as C#, Java, Perl, Python, and Ruby. If you have your own extended classes in QLExtension, you need to add SWIG scripts accordingly.</p>
<p>There is a command line script hidden in the Custom Build Tool of quantlib.i, where swig command is invoked to process the conversion.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo Invoking SWIG CSharp ...</span><br><span class="line"></span><br><span class="line">echo on</span><br><span class="line"></span><br><span class="line">D:\Workspace\swigwin\swig.exe -csharp -c++ -outdir &quot;..\..\SwigConversionLayer\csharp&quot; -namespace EliteQuant -o &quot;..\..\SwigConversionLayer\cpp\quantlib_wrap.cpp&quot; &quot;..\..\SwigConversionLayer\swig\quantlib.i&quot;</span><br><span class="line"></span><br><span class="line">echo off</span><br></pre></td></tr></table></figure>
<p>SWIG uses a technique called <a href="https://en.wikipedia.org/wiki/Platform_Invocation_Services" target="_blank" rel="noopener">P/Invoke</a> to facilitate the interoperability. The actually DllImport can be found in auto-generated <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/SwigConversionLayer/csharp/NQuantLibcPINVOKE.cs" target="_blank" rel="noopener">NQuantlibPInvokde.cs</a>. It also automatically generates NQuantlibc C++ project and QLEX C# project served as a bridge between these two languages, accordingly to the instruction scripts in the swig folder. To learn more about P/Inovke, please refer to <a href="https://mark-borg.github.io/blog/2017/interop/" target="_blank" rel="noopener">this technical blog C++/C# interoperability</a>.</p>
<h3 id="C-Layer"><a href="#C-Layer" class="headerlink" title="C# Layer"></a>C# Layer</h3><p>C# layer uses <a href="https://excel-dna.net/" target="_blank" rel="noopener">ExcelDNA</a> to create add-ins for Excel. Its official website has instructions for installation and usage. It enables you to create your own add-ins via Visual Basic, C# or F#.</p>
<p>The callbacks are straightforward. For example, if you want to find out how many business days between two dates according to some calendar, use the <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/CSharpApplications/EliteQuantExcel/Time/Date.cs" target="_blank" rel="noopener">following code</a>.</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ExcelFunction(Description = <span class="meta-string">"business days between two dates (doesn't include these two days)"</span>, Category = <span class="meta-string">"EliteQuantExcel - Time"</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">object</span> <span class="title">eqTimeBusinessDaysBetween</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">	[ExcelArgument(Description = <span class="string">"Start Date "</span></span>)]DateTime date1,</span></span><br><span class="line"><span class="function">	[<span class="title">ExcelArgument</span>(<span class="params">Description = <span class="string">"End Date "</span></span>)]DateTime date2,</span></span><br><span class="line"><span class="function">	[<span class="title">ExcelArgument</span>(<span class="params">Description = <span class="string">"Calendar (default NYC) "</span></span>)]<span class="keyword">string</span> calendar)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (ExcelUtil.CallFromWizard())</span><br><span class="line">		<span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">string</span> callerAddress = <span class="string">""</span>;</span><br><span class="line">	callerAddress = ExcelUtil.getActiveCellAddress();</span><br><span class="line">	OHRepository.Instance.removeErrorMessage(callerAddress);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">try</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((date1 == DateTime.MinValue) || (date2 == DateTime.MinValue))</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Date must not be empty. "</span>);</span><br><span class="line">		Date start = EliteQuant.EQConverter.ConvertObject&lt;Date&gt;(date1);</span><br><span class="line">		Date end = EliteQuant.EQConverter.ConvertObject&lt;Date&gt;(date2);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(calendar)) calendar = <span class="string">"NYC"</span>;</span><br><span class="line">		EliteQuant.Calendar can = EliteQuant.EQConverter.ConvertObject&lt;EliteQuant.Calendar&gt;(calendar);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> can.businessDaysBetween(start, end, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">catch</span> (Exception e)</span><br><span class="line">	&#123;</span><br><span class="line">		ExcelUtil.logError(callerAddress, System.Reflection.MethodInfo.GetCurrentMethod().Name.ToString(), e.Message);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>After you compile and load the xll into Excel, you should be able to use the <strong>eqTimeBusinessDaysBetween</strong> in the same way you call Excel built-in functions such as average() or vlookup().</p>
<h2 id="Pricing-and-Structuring-Trades"><a href="#Pricing-and-Structuring-Trades" class="headerlink" title="Pricing and Structuring Trades"></a>Pricing and Structuring Trades</h2><p>EliteQuant Excel allows you to build front office pricing workbooks. An example would be the classical <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/Workbooks/VanillaOptionPricer.xlsx" target="_blank" rel="noopener">Black-Scholes model located here</a>. Besides price and greeks on European call and put options, you are able to see visually how they change with underlying prices and option maturities.</p>
<p>The key is to construct an object and store it in a key-value memory space for later retrieval. In this example we created in one Excel cell an European option given its strikes, volatility etc, and then store it in a dictionary with object id as key and the oject itself as value. Then in another Excel cell we are able to retrieve this object by object id and calculate its greeks based on given underlying price. This dictionary is implemented in class <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/CSharpApplications/EliteQuantExcel/System/OHRepository.cs" target="_blank" rel="noopener">OHRepository</a>.</p>
<p>For example, <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/CSharpApplications/EliteQuantExcel/Instruments/OptionPricer.cs" target="_blank" rel="noopener">eqInstGetOptionGreeks</a> retrieves the option by its object id, calls its member methods, and returns the value back to Excel.</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ExcelFunction(Description = <span class="meta-string">"European Option with Black Scholes Pricer"</span>, Category = <span class="meta-string">"EliteQuantExcel - Instruments"</span>)</span>]</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">object</span> <span class="title">eqInstGetOptionGreeks</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">		[ExcelArgument(Description = <span class="string">"id of option "</span></span>)] <span class="keyword">string</span> ObjectId,</span></span><br><span class="line"><span class="function">		[<span class="title">ExcelArgument</span>(<span class="params">Description = <span class="string">"Greek type "</span></span>)]<span class="keyword">string</span> gtype,</span></span><br><span class="line"><span class="function">		[<span class="title">ExcelArgument</span>(<span class="params">Description = <span class="string">"Option type (VANILLA or MULTIASSET)"</span></span>)] <span class="keyword">string</span> otype,</span></span><br><span class="line"><span class="function">		[<span class="title">ExcelArgument</span>(<span class="params">Description = <span class="string">"trigger "</span></span>)]<span class="keyword">object</span> trigger)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (ExcelUtil.CallFromWizard())</span><br><span class="line">			<span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">string</span> callerAddress = <span class="string">""</span>;            </span><br><span class="line">		callerAddress = ExcelUtil.getActiveCellAddress();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span></span><br><span class="line">		&#123;</span><br><span class="line">			Xl.Range rng = ExcelUtil.getActiveCellRange();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (ExcelUtil.isNull(gtype))</span><br><span class="line">				gtype = <span class="string">"NPV"</span>;</span><br><span class="line">			<span class="keyword">if</span> (ExcelUtil.isNull(otype))</span><br><span class="line">				otype = <span class="string">"VANILLA"</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (otype == <span class="string">"VANILLA"</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				VanillaOption option = OHRepository.Instance.getObject&lt;VanillaOption&gt;(ObjectId);</span><br><span class="line">				<span class="keyword">switch</span> (gtype.ToUpper())</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"NPV"</span>:</span><br><span class="line">						<span class="keyword">return</span> option.NPV();</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"DELTA"</span>:</span><br><span class="line">						<span class="keyword">return</span> option.delta();</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"GAMMA"</span>:</span><br><span class="line">						<span class="keyword">return</span> option.gamma();</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"VEGA"</span>:</span><br><span class="line">						<span class="keyword">return</span> option.vega();</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"THETA"</span>:</span><br><span class="line">						<span class="keyword">return</span> option.theta();</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"RHO"</span>:</span><br><span class="line">						<span class="keyword">return</span> option.rho();</span><br><span class="line">					<span class="keyword">default</span>:</span><br><span class="line">						<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="string">"Unknown option type"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (Exception e)</span><br><span class="line">		&#123;</span><br><span class="line">			ExcelUtil.logError(callerAddress, System.Reflection.MethodInfo.GetCurrentMethod().Name.ToString(), e.Message);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">"#EQ_ERR!"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Data-and-Graph"><a href="#Data-and-Graph" class="headerlink" title="Data and Graph"></a>Data and Graph</h2><p>With the help of <a href="https://en.wikipedia.org/wiki/Visual_Basic_for_Applications" target="_blank" rel="noopener">VBA</a>, it is able to import data into Excel. <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/Workbooks/HistoricalData.xlsm" target="_blank" rel="noopener">This workbook</a> downloads historical stock price data from Quandl or Yahoo! and present them in a Candlestick chart. The implementation takes two steps. The first step is to write a C# web request to Yahoo! and download historical data, as shown in <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/CSharpApplications/EliteQuant/Brokers/Broker.cs" target="_blank" rel="noopener">this file</a>; then in the second step VBA calls this C# function and update Excel graph object.</p>
<p>In the spreadsheet the following VBA script calls C# function <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/CSharpApplications/EliteQuantExcel/Data/FreeMarketData.cs" target="_blank" rel="noopener">eqDataHistoricalQuotes</a> by Application.Run, and update the chart object <strong>ChartStockDataCandle</strong> with the historical data retrieved.</p>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> RetrieveHistData()</span><br><span class="line">    <span class="keyword">Dim</span> sym <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="keyword">Dim</span> startDate <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">Dim</span> endDate <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">Dim</span> hp, lp <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">Dim</span> freq <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="keyword">Dim</span> isDesc <span class="keyword">As</span> <span class="built_in">Boolean</span></span><br><span class="line">    Dim obj As Variant</span><br><span class="line">    </span><br><span class="line">    Application.ScreenUpdating = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    sym = Range(<span class="string">"Symbol"</span>).Value</span><br><span class="line">    startDate = Range(<span class="string">"StartDate"</span>).Value</span><br><span class="line">    endDate = Range(<span class="string">"EndDate"</span>).Value</span><br><span class="line">    freq = Range(<span class="string">"Freq"</span>).Value</span><br><span class="line">    isDesc = Range(<span class="string">"IsDes"</span>).Value</span><br><span class="line">    </span><br><span class="line">    obj = Application.Run(<span class="string">"eqDataHistoricalQuotes"</span>, sym, startDate, endDate, freq, isDesc)</span><br><span class="line">    nrow = UBound(obj, <span class="number">1</span>)</span><br><span class="line">    ncol = UBound(obj, <span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">    Columns(<span class="string">"A:G"</span>).<span class="keyword">Select</span></span><br><span class="line">    Selection.ClearContents</span><br><span class="line">    </span><br><span class="line">    Range(<span class="string">"A1"</span>).Resize(nrow, ncol).Value = obj</span><br><span class="line">    hp = Application.WorksheetFunction.Max(Range(<span class="string">"A1"</span>).Offset(<span class="number">1</span>, <span class="number">2</span>).Resize(nrow - <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    lp = Application.WorksheetFunction.Min(Range(<span class="string">"A1"</span>).Offset(<span class="number">1</span>, <span class="number">3</span>).Resize(nrow - <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    </span><br><span class="line">    ActiveSheet.ChartObjects(<span class="string">"ChartStockDataCandle"</span>).Activate</span><br><span class="line">    ActiveChart.ChartTitle.<span class="keyword">Text</span> = sym</span><br><span class="line">    nSeries = ActiveChart.SeriesCollection.Count       <span class="comment">'nSeries = 4</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> nSeries</span><br><span class="line">        ActiveChart.SeriesCollection(i).Name = Range(<span class="string">"A1"</span>).Offset(<span class="number">0</span>, i).Value</span><br><span class="line">        ActiveChart.SeriesCollection(i).Values = Range(<span class="string">"A1"</span>).Offset(<span class="number">1</span>, i).Resize(nrow - <span class="number">1</span>, <span class="number">1</span>).Value</span><br><span class="line">        ActiveChart.SeriesCollection(i).XValues = Range(<span class="string">"A1"</span>).Offset(<span class="number">1</span>, <span class="number">0</span>).Resize(nrow - <span class="number">1</span>, <span class="number">1</span>).Value</span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    ActiveChart.Axes(xlValue).MinimumScale = lp * <span class="number">0.95</span></span><br><span class="line">    ActiveChart.Axes(xlValue).MaximumScale = hp * <span class="number">1.05</span></span><br><span class="line">    ActiveChart.Axes(xlValue).TickLabels.NumberFormat = <span class="string">"#,##0.00"</span></span><br><span class="line">    </span><br><span class="line">    Application.ScreenUpdating = <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    Range(<span class="string">"A1"</span>).<span class="keyword">Select</span></span><br><span class="line">    <span class="comment">'MsgBox sym + " hist data retrieved"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h2 id="Real-Time-Data-RTD"><a href="#Real-Time-Data-RTD" class="headerlink" title="Real-Time Data (RTD)"></a>Real-Time Data (RTD)</h2><p>It wouldn’t be complete if we leave out Exel <strong>Real Time Data(RTD)</strong> service, which opens the door to real time market data. <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/Workbooks/StockTrading.xlsm" target="_blank" rel="noopener">This workbook</a> scrapes Yahoo! Finance real time market prices and updates them in Excel. The underlyiing RTD server is implemented <a href="https://github.com/EliteQuant/EliteQuant_Excel/blob/master/CSharpApplications/EliteQuantExcel/Rtd/RTDTimerServer.cs" target="_blank" rel="noopener">here</a>. </p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ComVisible(true)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RTDSimpleTimerServer</span> : <span class="title">IRtdServer</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> IRTDUpdateEvent _callback;</span><br><span class="line">	<span class="keyword">private</span> System.Windows.Forms.Timer _timer;</span><br><span class="line">	<span class="keyword">private</span> Dictionary&lt;<span class="keyword">int</span>, RoutineTask&gt; _tasks = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">int</span>, RoutineTask&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 1. Start the server</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">ServerStart</span>(<span class="params">IRTDUpdateEvent CallbackObject</span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// Called when the first RTD topic is requested</span></span><br><span class="line">		<span class="comment">// Sets server to poll for updates every second</span></span><br><span class="line">		_callback = CallbackObject;</span><br><span class="line">		_timer = <span class="keyword">new</span> System.Windows.Forms.Timer();</span><br><span class="line">		_timer.Tick += Callback;</span><br><span class="line">		_timer.Interval = <span class="number">1000</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ServerTerminate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// Kills timer and queries so they don't run after workbook closes</span></span><br><span class="line">		_timer.Dispose();</span><br><span class="line">		_tasks = <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2. connect to the data</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">object</span> <span class="title">ConnectData</span>(<span class="params"><span class="keyword">int</span> topicId, <span class="keyword">ref</span> Array Strings, <span class="keyword">ref</span> <span class="keyword">bool</span> GetNewValues</span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// ...</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DisconnectData</span>(<span class="params"><span class="keyword">int</span> topicId</span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// Removes query on disconnect</span></span><br><span class="line">		_tasks.Remove(topicId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Heartbeat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// Called by Excel if a given interval has elapsed (returns true)</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Array <span class="title">RefreshData</span>(<span class="params"><span class="keyword">ref</span> <span class="keyword">int</span> topicCount</span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">		_timer.Start();</span><br><span class="line">		<span class="keyword">return</span> results;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Callback</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// Stops timer and tells all queries to run their async delegates</span></span><br><span class="line">		_timer.Stop();</span><br><span class="line">		<span class="keyword">lock</span> (_tasks)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">foreach</span> (KeyValuePair&lt;<span class="keyword">int</span>, RoutineTask&gt; t <span class="keyword">in</span> _tasks)</span><br><span class="line">			&#123;</span><br><span class="line">				t.Value.AsyncImport();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		_callback.UpdateNotify();</span><br><span class="line">	&#125;</span><br><span class="line">&#125; <span class="comment">// End class RTDSimpleTimerServer</span></span><br></pre></td></tr></table></figure>
<p>To learn more about RTD in ExcelDNA, please check out the article <a href="https://www.codeproject.com/Articles/662009/Streaming-realtime-data-to-Excel" target="_blank" rel="noopener">Streaming realtime data to Excel</a> by Gert-Jan van der Kamp.</p>

      
    </div>
    
    
    

    

    

    
      <div>
        <ul class="post-copyright">
  <li class="post-copyright-author">
    <strong>Post author:</strong>
    Letian
  </li>
  <li class="post-copyright-link">
    <strong>Post link:</strong>
    <a href="https://letianzj.github.io/elitequant-excel" title="EliteQuant Excel">https://letianzj.github.io/elitequant-excel</a>
  </li>
  <li class="post-copyright-license">
    <strong>Copyright Notice: </strong>
    All articles in this blog are licensed under <a href="https://creativecommons.org/licenses/by-nc-sa/3.0/" rel="external nofollow" target="_blank">CC BY-NC-SA 3.0</a> unless stating additionally.
  </li>
</ul>

      </div>
    

    <footer class="post-footer">
      
        <div class="post-tags">
          
            <a href="/tags/Systematic-Investment/" rel="tag"># Systematic Investment</a>
          
            <a href="/tags/Trading-Ssytem/" rel="tag"># Trading Ssytem</a>
          
        </div>
      

      
      
      

      
        <div class="post-nav">
          <div class="post-nav-next post-nav-item">
            
              <a href="/elitequant-backtesting" rel="next" title="Elitequant Backtesting">
                <i class="fa fa-chevron-left"></i> Elitequant Backtesting
              </a>
            
          </div>

          <span class="post-nav-divider"></span>

          <div class="post-nav-prev post-nav-item">
            
              <a href="/mean-reversion" rel="prev" title="Mean Reversion">
                Mean Reversion <i class="fa fa-chevron-right"></i>
              </a>
            
          </div>
        </div>
      

      
      
    </footer>
  </div>
  
  
  
  </article>



    <div class="post-spread">
      
    </div>
  </div>


          </div>
          


          

  
    <div class="comments" id="comments">
      <div id="disqus_thread">
        <noscript>
          Please enable JavaScript to view the
          <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a>
        </noscript>
      </div>
    </div>

  



        </div>
        
          
  
  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    
    <div class="sidebar-inner">

      

      
        <ul class="sidebar-nav motion-element">
          <li class="sidebar-nav-toc sidebar-nav-active" data-target="post-toc-wrap">
            Table of Contents
          </li>
          <li class="sidebar-nav-overview" data-target="site-overview-wrap">
            Overview
          </li>
        </ul>
      

      <section class="site-overview-wrap sidebar-panel">
        <div class="site-overview">
          <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
            
              <img class="site-author-image" itemprop="image"
                src="/images/avatar.png"
                alt="Letian" />
            
              <p class="site-author-name" itemprop="name">Letian</p>
              <p class="site-description motion-element" itemprop="description"></p>
          </div>

          <nav class="site-state motion-element">

            
              <div class="site-state-item site-state-posts">
              
                <a href="/archives/">
              
                  <span class="site-state-item-count">18</span>
                  <span class="site-state-item-name">posts</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-categories">
                <a href="/categories/index.html">
                  <span class="site-state-item-count">10</span>
                  <span class="site-state-item-name">categories</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-tags">
                <a href="/tags/index.html">
                  <span class="site-state-item-count">9</span>
                  <span class="site-state-item-name">tags</span>
                </a>
              </div>
            

          </nav>

          

          
            <div class="links-of-author motion-element">
                
                  <span class="links-of-author-item">
                    <a href="https://github.com/letianzj" target="_blank" title="GitHub">
                      
                        <i class="fa fa-fw fa-github"></i>GitHub</a>
                  </span>
                
                  <span class="links-of-author-item">
                    <a href="mailto:letian.zj@gmail.com" target="_blank" title="E-Mail">
                      
                        <i class="fa fa-fw fa-envelope"></i>E-Mail</a>
                  </span>
                
                  <span class="links-of-author-item">
                    <a href="https://www.linkedin.com/in/letian-wang-phd-cfa-frm-75b53312/" target="_blank" title="Linkedin">
                      
                        <i class="fa fa-fw fa-linkedin"></i>Linkedin</a>
                  </span>
                
            </div>
          

          
          

          
          

          

        </div>
      </section>

      
      <!--noindex-->
        <section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active">
          <div class="post-toc">

            
              
            

            
              <div class="post-toc-content"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#Introduction"><span class="nav-number">1.</span> <span class="nav-text">Introduction</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Code-Structure"><span class="nav-number">2.</span> <span class="nav-text">Code Structure</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#C-Analytical-Library"><span class="nav-number">2.1.</span> <span class="nav-text">C++ Analytical Library</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#SWIG-Conversion-Layer"><span class="nav-number">2.2.</span> <span class="nav-text">SWIG Conversion Layer</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#C-Layer"><span class="nav-number">2.3.</span> <span class="nav-text">C# Layer</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Pricing-and-Structuring-Trades"><span class="nav-number">3.</span> <span class="nav-text">Pricing and Structuring Trades</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Data-and-Graph"><span class="nav-number">4.</span> <span class="nav-text">Data and Graph</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Real-Time-Data-RTD"><span class="nav-number">5.</span> <span class="nav-text">Real-Time Data (RTD)</span></a></li></ol></div>
            

          </div>
        </section>
      <!--/noindex-->
      

      

    </div>
  </aside>


        
      </div>
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright">&copy; <span itemprop="copyrightYear">2020</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Letian</span>

  
</div>


  <div class="powered-by">Powered by <a class="theme-link" href="http://hexo.io" rel="external nofollow">Hexo</a></div>



  <span class="post-meta-divider">|</span>



  <div class="theme-info">Theme &mdash; <a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next" rel="external nofollow">NexT.Gemini</a> v5.1.4</div>




        







        
      </div>
    </footer>

    
      <div class="back-to-top">
        <i class="fa fa-arrow-up"></i>
        
      </div>
    

    

  </div>

  

<script type="text/javascript">
  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {
    window.Promise = null;
  }
</script>









  












  
  
    <script type="text/javascript" src="/lib/jquery/index.js?v=2.1.3"></script>
  

  
  
    <script type="text/javascript" src="/lib/fastclick/lib/fastclick.min.js?v=1.0.6"></script>
  

  
  
    <script type="text/javascript" src="/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.ui.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5"></script>
  


  


  <script type="text/javascript" src="/js/src/utils.js?v=5.1.4"></script>

  <script type="text/javascript" src="/js/src/motion.js?v=5.1.4"></script>



  
  


  <script type="text/javascript" src="/js/src/affix.js?v=5.1.4"></script>

  <script type="text/javascript" src="/js/src/schemes/pisces.js?v=5.1.4"></script>



  
  <script type="text/javascript" src="/js/src/scrollspy.js?v=5.1.4"></script>
<script type="text/javascript" src="/js/src/post-details.js?v=5.1.4"></script>



  


  <script type="text/javascript" src="/js/src/bootstrap.js?v=5.1.4"></script>



  


  

    
      <script id="dsq-count-scr" src="https://https-letianzj-github-io.disqus.com/count.js" async></script>
    

    
      <script type="text/javascript">
        var disqus_config = function () {
          this.page.url = 'https://letianzj.github.io/elitequant-excel';
          this.page.identifier = 'elitequant-excel';
          this.page.title = 'EliteQuant Excel';
        };
        var d = document, s = d.createElement('script');
        s.src = 'https://https-letianzj-github-io.disqus.com/embed.js';
        s.setAttribute('data-timestamp', '' + +new Date());
        (d.head || d.body).appendChild(s);
      </script>
    

  




	





  














  





  

  

  

  
  

  
  
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"]  ],
          processEscapes: true,
          skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
        }
      });
    </script>

    <script type="text/x-mathjax-config">
      MathJax.Hub.Queue(function() {
        var all = MathJax.Hub.getAllJax(), i;
        for (i=0; i < all.length; i += 1) {
          all[i].SourceElement().parentNode.className += ' has-jax';
        }
      });
    </script>
    <script type="text/javascript" src="//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"></script>
  


  

  

</body>
</html>
